path = pathToFile(dirname(getSourceFileInfo())).getAbsolutePath();

DIAGNOSE = "";
VERBOSE = "";
EDITOR_FILE = "";

make(what) {
    context = this.caller.global;
    
    if (what == "args") {
        return
            "VERBOSE=\n" +
            "VERBOSE=VERBOSE\n" +
            "DIAGNOSE=\n" +
            "DIAGNOSE=DIAGNOSE\n" +
            "TEST=*"
            ;
    }
    else if (what == "sync-path") {
        return ""; //D:/tmp/deleme"; //\nD:/tmp/deleme2\nD:/tmp/deleme3\nD:/tmp/deleme4\nD:/tmp/deleme5";
    }
    else if (what == "build" || what == "run") {
        if (what == "run") {
            context.amoMessage("restart listener");
            context.amoMakeStopListener();
            context.includedFiles.clear();
            
            this.interpreter.source(super.path + "/make.bsh", context.namespace);
            this.interpreter.source(super.path + "/make/listener.bsh", context.namespace);
        }
        
        context.amoListenerDiagnose = DIAGNOSE.equals("DIAGNOSE");
        context.amoListenerVerbose = VERBOSE.equals("VERBOSE");
        
        if (what == "run") {
            context.amoMakeStartListener();
        }
    }
    else if (what == "compile") {
        context.amoMessage("->" + EDITOR_FILE);
        context.source(EDITOR_FILE);
    }
    else if (what == "clean") {
        context.amoMessage("stop listener");
        context.amoMakeStopListener();
        context.includedFiles.clear();
    }
    else {
        context.amoMessage("nothing to do for " + what);
    }
    
    return "";
}

