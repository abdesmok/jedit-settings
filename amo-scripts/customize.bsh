import org.gjt.sp.jedit.*;
import javax.swing.*;
import projectviewer.*;
import projectviewer.gui.*;

boolean amoProjectComboBoxIsHidden() {
    return jEdit.getProperty("amo.customize.hide-project-combo-box", "true").equals("true");
}

boolean amoHideProjectComboBox() {
    return amoHideProjectComboBox(amoProjectComboBoxIsHidden(), null);
}

boolean amoHideProjectComboBox(View view) {
    return amoHideProjectComboBox(amoProjectComboBoxIsHidden(), view);
}

boolean amoHideProjectComboBox(boolean hide) {
    return amoHideProjectComboBox(hide, null);
}

boolean amoHideProjectComboBox(boolean hide, View view) {
    jEdit.setProperty("amo.customize.hide-project-combo-box", String.valueOf(hide));
    
    if (view == null) {
        view = jEdit.getActiveView();
    }
    
    if (view != null) {
        ProjectViewer projectViewer = (ProjectViewer) view.getDockableWindowManager().getDockableWindow("projectviewer");
        
        if (projectViewer != null) {
            
            for (int i = 0; i < projectViewer.getComponentCount(); ++i) {
                JComponent component = projectViewer.getComponent(i);
                
                if (component instanceof ProjectComboBox) {
                    component.setVisible(! hide);
                    
                    return true;
                }
            }
        }
    }
    
    return false;
}

boolean amoProjectsMenuEnabled() {
    return jEdit.getProperty("amo.customize.enable-projects-menu", "true").equals("true");;
}

boolean amoEnableProjectsMenu() {
    return amoEnableProjectsMenu(amoProjectsMenuEnabled(), null);
}

boolean amoEnableProjectsMenu(View view) {
    return amoEnableProjectsMenu(amoProjectsMenuEnabled(), view);
}

boolean amoEnableProjectsMenu(boolean enable) {
    return amoEnableProjectsMenu(enable, null);
}

boolean amoEnableProjectsMenu(boolean enable, View view) {
    jEdit.setProperty("amo.customize.enable-projects-menu", String.valueOf(enable));
    
    if (view == null) {
        view = jEdit.getActiveView();
    }
    
    if (view != null) {
        ProjectViewer projectViewer = (ProjectViewer) view.getDockableWindowManager().getDockableWindow("projectviewer");
        
        if (projectViewer != null) {
            JMenuBar menuBar = view.getJMenuBar();
            
            if (menuBar != null) {
                component = menuBar.getComponent(1);
                
                if (component != null && component instanceof JMenu) {
                    JMenu menu = (JMenu) component;
                    
                    if (menu.getText().equals("Projects")) {
                        menuBar.remove(menu);
                    }
                }
                
                if (enable) {
                    GroupMenu menu = new GroupMenu("Projects", true, true, new ActionListener() {
                        public void actionPerformed(ActionEvent event) {
                            ProjectViewer.setActiveNode(view, (VPTNode) event.getSource());
                        }
                    });
                    
                    menu.setMnemonic(KeyEvent.VK_P);
                    
                    menu.addMenuListener(new MenuListener() {
                        void menuSelected(MenuEvent event) {
                            menu.populate(menu, VPTRoot.getInstance(), view);
                        }
                        void menuDeselected(MenuEvent event) {
                        }
                        void menuCanceled(MenuEvent event) {
                        }
                    });
                    
                    menuBar.add(menu, 1);
                }
                
                menuBar.doLayout();
                menuBar.repaint();
                
                return true;
            }
        }
    }
    
    return false;
}

boolean amoEnableAllCustomizations() {
    boolean done =  amoHideProjectComboBox();
    done = amoEnableProjectsMenu() && done;
    
    return done;
}

boolean amoEnableAllCustomizations(boolean enable) {
    boolean done = amoHideProjectComboBox(enable);
    done = amoEnableProjectsMenu(enable) && done;
    
    return done;
}

boolean amoEnableAllCustomizations(View view) {
    boolean done = amoHideProjectComboBox(view);
    done = amoEnableProjectsMenu(view) && done;
    
    return done;
}

boolean amoEnableAllCustomizations(boolean enable, View view) {
    boolean done = amoHideProjectComboBox(enable, view);
    done = amoEnableProjectsMenu(enable, view) && done;
    
    return done;
}

