import org.gjt.sp.jedit.*;
import projectviewer.event.*;

sourceRelative("../utils.bsh");

includeOnce("log.bsh");
includeOnce("gui.bsh");
includeOnce("result.bsh");

void amoMakeStartListener() {
    EBComponent component = new EBComponent() {
        {
            lastMakefile = null;
            saveDuplicationPaths = new Vector();
        }
        public void finalize() {
        }
        public void handleMessage(EBMessage message) {
            amoMakeMessage(message.toString() + "\n  " + message.paramString());
            
            boolean updateComponents = false;
            Buffer syncBuffer = null;
            boolean saveDuplication = false;
            
            if (message instanceof NodeSelectionUpdate || message.paramString().equals("AMO-UPDATE-PARAM")) {
                //amoMakeMessage("AMO UPDATE COMPONENTS " + message);
                File makefile = amoFindMakeFile();
                
                //amoMakeMessage((lastMakefile == null ? "null" : lastMakefile.getPath()) + " ?= " + (makefile == null ? "null" : makefile.getPath()));
                
                if (makefile != null && ! makefile.equals(lastMakefile) || makefile == null && lastMakefile != null) {
                    lastMakefile = makefile;
                    updateComponents = true;
                }
            }
            else if (message instanceof ViewerUpdate || message instanceof BufferChanging) {
                class Message extends EBMessage {
                    public Message() {
                        super(new EBComponent() {});
                    }
                    public String paramString() { return "AMO-UPDATE-PARAM"; }
                };
                
                Message message = new Message();
                
                EditBus.sendAsync(message);
            }
            else if (message instanceof BufferUpdate) {
                BufferUpdate bufferUpdate = (BufferUpdate) message;
                if (bufferUpdate.getWhat() == BufferUpdate.SAVED) {
                    if (lastMakefile == null) {
                        lastMakefile = amoFindMakeFile();
                        if (lastMakefile != null)
                            updateComponents = true;
                    }
                    
                    if (lastMakefile != null) {
                        if (bufferUpdate.getBuffer().getPath().equals(lastMakefile.getPath())) {
                            updateComponents = true;
                        }
                        else {
                            syncBuffer = bufferUpdate.getBuffer();
                            saveDuplication = true;
                        }
                    }
                }
            }
            else if (message instanceof EditPaneUpdate) {
                EditPaneUpdate editPaneUpdate = (EditPaneUpdate) message;
                
                if (editPaneUpdate.getWhat() == EditPaneUpdate.BUFFER_CHANGED) {
                    View view = jEdit.getActiveView();
                    
                    if (view != null)
                        syncBuffer = view.getBuffer();
                }
            }
            else if (message.paramString().equals("AMO-QUIT-PARAM")) {
                amoMakeMessage("AMO REMOVE FROM BUS " + component);
                EditBus.removeFromBus(component);
            }
            
            if (updateComponents) {
                amoMakeUpdateComponents(lastMakefile);
                
                if (saveDuplicationPaths == null)
                    saveDuplicationPaths = new Vector();
                
                saveDuplicationPaths.clear();
                BufferedReader br = amoMakeResult("sync-path", lastMakefile);
                
                if (br != null) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        saveDuplicationPaths.add(line);
                    }
                }
                
                syncBuffer = view.getBuffer();
            }
            
            if (syncBuffer != null) {
                View view = jEdit.getActiveView();
                File bufferFile = new File(syncBuffer.getPath());
                
                String status = bufferFile.getName();
                
                if (bufferFile.exists()) {
                    status = bufferFile.getAbsolutePath();
                    
                    String projectDirPath = lastMakefile.getParentFile().getAbsolutePath() + File.separator;
                    String bufferDirPath = bufferFile.getParentFile().getAbsolutePath() + File.separator;
                    
                    if (bufferDirPath != null && bufferDirPath.startsWith(projectDirPath)) {
                        bufferDirPath = bufferDirPath.substring(projectDirPath.length());
                        String bufferPath = bufferDirPath + bufferFile.getName();
                        
                        for (String saveDuplicationPath : saveDuplicationPaths) {
                            (new File(saveDuplicationPath + bufferDirPath)).mkdirs();
                            String savePath = saveDuplicationPath + File.separator + bufferPath;
                            
                            if (saveDuplication) {
                                syncBuffer.save(view, savePath, false);
                                //amoMakeMessage("save to " + savePath);
                                status += " <-> " + savePath + " w";
                            }
                            else {
                                File saveFile = new File(savePath);
                                
                                if (saveFile.exists()) {
                                    if (saveFile.lastModified() < bufferFile.lastModified()) {
                                        status += " <-> " + savePath + " *";
                                    }
                                    else {
                                        status += " <-> " + savePath + " =";
                                    }
                                }
                                else {
                                    status += " <-> " + savePath + " ?";
                                }
                            }
                        }
                    }
                    
                    //if (view != null) view.setUserTitle(status);
                    if (view != null) view.setTitle(status);
                    //amoMakeMessage("status : " + status);
                }
            }
        }
        
        File lastMakefile;
        Vector saveDuplicationPaths;
    };
    
    amoMakeMessage("AMO ADD TO BUS " + component);
    EditBus.addToBus(component);
}

void amoMakeStopListener() {
    class Message extends EBMessage {
        public Message() {
            super(new EBComponent() {});
        }
        public String paramString() { return "AMO-QUIT-PARAM"; }
    };
    
    Message message = new Message();
    
    EditBus.send(message);
}

