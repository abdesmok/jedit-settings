[vfs.browser.path]
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap\\simulation\\outsrc_test
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap\\simulation
E:\\projects\\covera\\covera\\trunk\\workshop\\qt\\vector
E:\\projects\\covera\\covera\\trunk\\workshop\\qt
E:\\projects\\covera\\covera\\trunk\\workshop
E:\\projects\\covera\\covera\\trunk\\workshop\\qt\\yanni
E:\\projects\\covera\\covera\\trunk\\workshop\\qt\\http
E:\\projects\\covera\\covera\\trunk
E:\\projects\\covera\\covera\\trunk\\src
E:\\projects\\covera\\covera\\trunk\\src\\project
E:\\projects\\covera\\covera\\trunk\\src\\project\\view
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap\\simulation\\raytracer
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap\\simulation\\raytracer\\photonmaps
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\image\\heatmap\\simulation\\raytracer\\multiwall
E:\\projects\\covera\\covera\\trunk\\src\\dockwidgets
E:\\projects\\covera\\covera\\trunk\\src\\maparea
E:\\projects\\covera\\covera\\trunk\\\\src\\cvrlib\\gui\\tabbar
E:\\projects\\covera\\covera\\tags\\release-2.1.0\\src\\shell
E:\\projects\\covera\\covera\\trunk\\src\\project\\metadata
E:\\projects\\covera\\covera\\trunk\\src\\project\\map
E:\\projects\\covera\\covera\\trunk\\installer\\msi
E:\\projects\\covera\\covera\\trunk\\buildconf
E:\\projects\\covera\\covera\\branches\\2.1.x\\libs\\qt\\4.3.4-static\\examples\\dialogs\\classwizard
E:\\projects\\covera\\covera\\trunk\\buildtools\\src\\compress
E:\\projects\\covera\\covera\\trunk\\buildtools\\src
E:\\projects\\covera\\covera\\trunk\\buildtools
E:\\projects\\covera\\covera\\trunk\\buildtools\\src\\configure
E:\\projects\\covera\\covera\\trunk\\src\\drawing
E:\\qt\\win32-g++\\4.4.3\\src\\corelib\\kernel
E:\\qt\\win32-g++\\4.4.3\\src\\corelib
E:\\qt\\win32-g++\\4.4.3\\src
E:\\qt\\win32-g++\\4.4.3\\src\\gui
E:\\qt\\win32-g++\\4.4.3\\src\\gui\\painting
E:\\qt\\win32-g++\\4.4.3\\src\\opengl
E:\\projects\\covera\\covera\\trunk\\src\\resources\\covera
E:\\projects\\covera\\covera\\trunk\\src\\resources
E:\\projects\\covera\\covera\\trunk\\src\\resources\\sounds
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\gui
E:\\projects\\covera\\covera\\trunk\\output\\c_coverazone_symbols\\mainwindow
E:\\projects\\covera\\covera\\trunk\\output\\c_coverazone_symbols
E:\\projects\\covera\\covera\\trunk\\output
E:\\projects\\covera\\covera\\trunk\\src\\mainwindow
E:\\qt\\win32-g++\\4.4.3\\examples\\widgets\\imageviewer
E:\\projects\\covera\\covera\\trunk\\src\\reusable
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\tools
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\global
E:\\qt\\win32-g++\\4.4.3\\src\\corelib\\io
E:\\projects\\covera\\covera\\trunk\\output\\c_coverazone_symbols_dynamic\\cvrlib\\gui
E:\\projects\\covera\\covera\\trunk\\output\\c_coverazone_symbols_dynamic\\cvrlib
E:\\projects\\covera\\covera\\trunk\\output\\c_coverazone_symbols_dynamic
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib
E:\\projects\\covera\\covera\\trunk\\src\\dockwidgets\\reportmode
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\math
E:\\projects\\covera\\covera\\trunk\\src\\dockwidgets\\viewmode
E:\\projects\\jedit\\code\\jEdit\\trunk
e:\\qt\\win32-g++\\4.4.3\\src\\opengl
E:\\projects\\covera\\covera\\trunk\\workshop\\qt\\opengl
E:\\projects\\covera\\covera\\trunk\\\\src
[sftp.host]
192.168.17.2:22
192.168.17.2
[vfs.browser.filter]
*\[^~#\]
*
[helpviewer.search]
heap
SearchAndReplace
reloaded
xml errors
parsing errors
search filter
undo level
undoredo
bsh command
command
[FindFilePlugin.path]
E:\\projects\\covera\\covera\\trunk\\manual\\src\\
E:\\kde\\src\\
[replace.script]
MainWindowLightBulb
_1 + \";\"
SLOT(
_1
data()
\" \" + _1 + \"(\"
 _1 + \"(\"
\"_\" + _1 + \"(data, \"
_NO_CHANGES(data, 
\"_\" + _1 + \"data, \"
\"_\" + _1data, 
DataMask_
abstractDockWidgets
_1 + \"DW\"
_isEmpty
\"//{!}_\" + _1 + \"->undock();\"
\"//{*}_\" + _1 + \"->close();\"
\"v.insert(\" + _1 + \", OverLayMetaData());\"
measurementType
\"stringRefToDouble(attributes.value(\" + _1 + \"))\"
_1 + _2
\"stringRefToBool(attributes.value(\" + _1 + \"), \"
\"stringRefToBool(attributes.value(\" + _1 + \"))\"
\"stringRefToUTCDate(attributes.value(\" + _1 + \"))\"
\"attributes.value(\" + _1 + \").toString())\"
\"attributes.value(\" + _1 + \").toString();\"
\"stringRefToInt(attributes.value(\" + _1 + \").toString())\"
[ftp.user]
root
[search.directory]
E:\\projects\\covera\\covera\\trunk\\src
E:\\projects\\covera\\covera\\trunk\\src\\project\\view
E:\\projects\\covera\\covera\\trunk\\srs
E:\\projects\\covera\\covera\\trunk\\src\\maparea
E:\\projects\\covera\\covera\\trunk\\src\\maparead
E:\\projects\\covera\\covera\\trunk\\src\\
E:\\projects\\covera\\covera\\trunk\\src\\drawing
E:\\projects\\covera\\covera\\trunk\\src\\drawing\\
E:\\projects\\covera\\covera\\trunk\\installer\\msi\\
E:\\projects\\covera\\covera\\trunk\\src\\shell
E:\\projects\\covera\\covera\\trunk\\src\\mainwindow
E:\\projects\\covera\\covera\\trunk\\src\\mainwindow\\
E:\\projects\\covera\\covera\\trunk\\\\src\\project\\model\\
E:\\projects\\covera\\covera\\trunk\\src\\mainwondow
E:\\projects\\covera\\covera\\trunk\\src\\project\\node
E:\\projects\\covera\\covera\\trunk\\src\\project
E:\\projects\\covera\\covera\\trunk\\src\\ensureChange
E:\\qt\\win32-g++\\4.4.2\\src\\gui\\
E:\\qt\\win32-g++\\4.4.2\\src\\gui\\kernel\\
E:\\projects\\covera\\covera\\trunk\\src\\dockwidgets
E:\\projects\\covera\\covera\\trunk\\buildconf\\
E:\\projects\\covera\\covera\\trunk\\src\\maparea\\
E:\\projects\\covera\\covera\\trunk\\src\\mapview\\
E:\\projects\\covera\\covera\\trunk\\src\\project\\view\\
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\gui\\collapsiblegroupbox\\
E:\\projects\\covera\\covera\\trunk\\src\\mapwidget
E:\\projects\\covera\\covera\\trunk\\src\\cvrlib\\gui\\dockwidget\\
E:\\projects\\covera\\covera\\branches\\2.1.x\\src
E:\\qt\\win32-g++\\4.4.1\\tools\\assistant\\tools\\assistant\\
sftp://root@192.168.17.2:22/var/trac/covera/
sftp://root@192.168.17.2:22/var/trac/covera/conf/
sftp://root@192.168.17.2:22/var/buildmaster/covera/
sftp://root@192.168.17.2:22/usr/lib/python2.4
sftp://root@192.168.17.2:22/usr/lib/python2.4/site-packages/
[replace]
last
a
d2
rayGenerator
rayGenerators
RayGenerator
difLine
bottom
top
.y
x2
p
int
l2
vertexDiffractionDirections
segmentAngles
M_PI
a2
tenLamda
maxPathLengthToPixel
eflection
pathLength
source.position
.id
.index
hitSegment.distance
hitSegment.point
hitSegment.segmentId
hitSegment.segmentIndex
hitSegment.wallIndex
reflexionTree
ReflexionTree
simulationWall.
simulationWall
walls
wall
Wall
y
qRound
floor
(int) ceil
.
bottomRight
bottomLeft
maxDistance
hitSegment
rayLine
hitSegments
HitSegment
oneRayPixelDistance
hitPoint
Bottom
Top
RaySegmentsIntersection
rayPixels
wallsBoundingRect
printf(\"%d %d\\n\"
mostFarPixel
valuesRect
all
[console.BeanShell]
55 + 566 / 45555
55 + 566 / 45
55 + 566 / 458
55 + 566
a + 566
a
a=\"kk\";
System.println(\"kkk\");
System.io.println(\"kkk\");
sys.io.println(\"kkk\");
[console.GDB/MI]
where
c
r
start
open ee
s
gdb
k
q
[console.ssh]
/etc/init.d/buildbot restart && /var/svn/covera/hooks/svn_buildbot.py --exclude=\"tags/?.*\" --repository=\"/var/svn/covera\" --revision=\"1981\" --bbserver=\"localhost\" --bbport=9989
/etc/init.d/buildbot restart && /var/svn/covera/hooks/svn_buildbot.py --exclude=\"tags/?.*\" -- \nrepository=\"/var/svn/covera\" --revision=\"1981\" --bbserver=\"localhost\" --bbport=9 \n989
/var/svn/covera/hooks/svn_buildbot.py --exclude=\"tags/?.*\" --repository=\"/var/svn/covera\" --revision=\"1981\" --bbserver=\"localhost\" --bbport=9989
/etc/init.d/buildbot restart
mkdir -p /var/www/html/download/builds/snapshots/r1987nn/trunk/coverazone
/var/svn/covera/hooks/svn_buildbot.py --exclude=\"tags/?.*\" --repository=\"/var/svn/covera\" --revision=\"1987\" --bbserver=\"localhost\" --bbport=9989
/usr/bin/svn
/sbin/svn
/bin/svn
svn update
[search.filter]
(re)((?!moc_)(?!\[a-z0-9_\]+_moc)(?!\[a-z0-9_\]+_data)(?!\[a-z0-9_\]*outsrc\[a-z0-9_\]*)\[a-z0-9_\]+\\.(cpp|h))
*
*.h
*.cpp
*.cfg
*.py
*.cfg|*.py
*.cfg *.py
*.h|*.hpp|*.c|*.cpp
*.xslt
[FindFilePlugin.filter]
*.txt
deleme.txt
qserial.h
[fastopen.patterns]
cvrdockarea
[action]
prev-line
next-line
make/make_exec
make/make_all
save
delete
select-next-word
document-home
insert-newline-indent
end
paste
prev-word
copy
home
next-char
prev-char
backspace
select-prev-word
select-end
error-list-next-error
next-word
undo
select-next-line
overwrite
select-home
quick-search
toggle-rect-select
insert-tab-indent
cut
delete-line
select-prev-char
goto-line
error-list-previous-error
select-prev-line
find
voxspellcheck.stop
voxspellcheck.start
next-paragraph
shift-left
redo
select-document-end
document-end
select-next-char
assistant-activate-keyword
select-next-page
abdesmok/goto80
abdesmok/tabify_empty_untabified_lines
regexp
error-list-clear
open-file
new-file
debugger-go
run-temp-macro
stop-recording
record-temp-macro
prev-paragraph
closeall-except-active
save-all
search-in-directory
next-page
[macro.rs.LineFilter.regexp]
com
[gatchan-highlight.expression]
\[a-zA-Z_;,\]  +
  
Q_ASSERT
 ;| ,|\[^ \] +\\)|\[^ \]{|};
 ;)| ,|\[^ \] +\\)|\[^ \]{|};
( ;)| ,|\[^ \] +\\)|\[^ \]{|};
( ;| ,|\[^ \] +\\)|\[^ \]{|};
\[a-zA-Z_;\]  +
\[a-zA-Z_\]  +
\[a-zA-Z\]  +
\[a-zA-\]  +
\[a-zA\]  +
\[a-z\]  +
\[a-\]  +
\[a\]  +
\[\]  +
[clipboard]
power
diffractedRayMinPowerPerPixel
static const double reflectedRayMinPowerPerPixel = 1e-6;
pixelsInfo.begin()
Cvr2DVector<PixelInfo>
pixelsInfo
pixelInfo
Cvr2DVector<PixelInfo> pixelsInfo
reflectionTrees
ReflectionTree
      ReflectionTree reflectionTree;\n
if (pixel.x() ==
rayGenerator->isDiffraction
                    cvrprintf(\"!NEW DIFFRACTION %f,%f %f,%f maxAng %f min Ang %f sum %f count %d\\n\",\n                              diffractionSegment.x1(), diffractionSegment.y1(), diffractionSegment.x2(), diffractionSegment.y2(),\n                              diffraction.maxAngle, diffraction.minAngle,\n                              diffraction.powerPerPixelSum, diffraction.powerPerPixelCount\n                              );\n
diffraction.maxAngle
diffraction.powerPerPixelCount
diffraction.powerPerPixelSum
powerPerPixel
diffractionSegment.x1(),
diffractionSegment
diffraction.minAngle != diffractionMinAngle
diffraction.minAngle == diffractionMinAngle
diffraction
angle
segment
diffraction->
rayOrigin
                  diffraction.powerPerPixelSum += powerPerPixel;\n                  diffraction.powerPerPixelCount += 1;\n
powerPerPixelCount
powerPerPixelSum
    double powerPerPixelSum;\n    int powerPerPixelCount;\n
const Diffraction *diffraction = static_cast<Diffraction *>(rayGenerator);
lastAngle
firstAngle
            while (firstAngle < - M_PI) firstAngle += 2 * M_PI;\n            while (firstAngle > M_PI) firstAngle -= 2 * M_PI;\n
while (firstAngle < - M_PI) firstAngle += 2 * M_PI;
firstAngle = diffraction->minAngle;
rayGenerator
Diffraction *
rayGenerator->isDiffraction) {
rayGenerators
ray.angle
                            while (d1 < - M_PI) d1 += 2 * M_PI;\n                            while (d1 > M_PI) d1 -= 2 * M_PI;\n                            while (d2 < - M_PI) d2 += 2 * M_PI;\n                            while (d2 > M_PI) d2 -= 2 * M_PI;\n
diffractionMinAngle
diffraction.maxAngle = ray.angle;
Q_ASSERT(
diffraction.minAngle = diffractionMinAngle;
diffraction.segment = diffractionSegment
                    diffraction.segment = diffractionSegment;\n
                    diffraction.powerPerPixelSum += powerPerPixel;\n                    diffraction.powerPerPixelCount += 1;\n
diffraction.powerPerPixelSum += powerPerPixel;
ray.power / pow(qMax(tenLamda, totalDistance), lossExponent)
double totalDistance = ray.pathLength + diffractionDistance;
diffractionDistance
                      double totalDistance = ray.pathLength + distance;\n                      double value = ray.power / pow(qMax(tenLamda, totalDistance), lossExponent);\n
diffraction.
    bool valid;\n    double powerPerPixelSum;\n    int powerPerPixelCount;\n    QLineF segment;\n    double maxAngle;\n    double minAngle;\n
segmentCount
segmentIndex
wall.segmentAngles.at(segmentId);
[console.System]
make exec
E:\\projects\\covera\\covera\\trunk
make
make -f Makefile.vcc_coveraplan
make -f Makefile.coverazone_symbols
make -f Makefile.coverazone_dynamic_symbols
make -f Makefile.coverazone
make -f Makefile.covera
make compile_and_exec
make -f Makefile.vcc_covera
make -f Makefile.vcc_coverazone
make -f Makefile.covera_dynamic
cd ../..
$d
$s
proc.sh
./proc.sh
.\\proc.sh
[find]
cvrp
Diffraction
first
d
d1
vertexDiffractionAngles
vertexDiffraction
sourcePoint
sourcePoints
SourcePoint
rayLine
source.
right
left
.x
x1
pt
double
l1
M_PI
vertexAngles
angles
MP_PI
a1
minDistance
HitSegment
maxPathLength
/*
< 1
pow(
eflexion
maxReflexions
totalDistance
pathLength
sourcePosition
HitSegme
.segmentId
.segmentIndex
hitDistance
hitPoint
hitSegmentId
hitSegmentIndex
hitWallIndex
qLower
pathTree
PathTree
wall.
wall
wallsData
wallData
WallData
cvrpri
x
(int) floor
ceil
qRound
->
topRight
forea
hs
