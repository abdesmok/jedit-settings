import console.*;
import projectviewer.*;
import projectviewer.event.*;
import java.awt.*;
import java.awt.event.*;
import java.swing.*;
import java.util.*;
import org.gjt.sp.jedit.*;

void amoMakeMessage(String message) {
    ConsolePlugin.getConsole(view).getOutput().print(new Color(100, 200, 100), message);
}

Container amoMakeContainer() {
    if (jEdit.getPlugin("console.ConsolePlugin", true) == null) {
        Macros.error(view, "ConsolePlugin not installed");
        return null;
    }
    
    Container container = ConsolePlugin.getConsole(view);
    
    if (container != null)
        container = container.getComponent(0);
    
    if (container == null) {
        Macros.error(view, "Container not found");
    }
    
    return container;
}

void amoMakeRemoveComponents() {
    Container container = amoMakeContainer();
    
    if (container == null)
        return;
    
    for (int i = 0; i < container.getComponentCount(); ) {
        String name = container.getComponent(i).getName();
        
        if (name != null && name.startsWith("AmoMake_"))
            container.remove(i);
        else
            ++i;
    }
}

String amoMakeArgs() {
    Container container = amoMakeContainer();
    
    String args = "";
    
    if (container == null)
        return args;
    
    for (int i = 0; i < container.getComponentCount(); ++i) {
        JComponent component = container.getComponent(i);
        String componentName = component.getName();
        
        if (component instanceof JComboBox && componentName != null && componentName.startsWith("AmoMake_")) {
            args += " " + ((JComboBox) component).getSelectedItem();
        }
    }
    
    return args;
}

JComboBox amoMakeComboBox(String name, boolean create) {
    Container container = amoMakeContainer();
    
    if (container == null)
        return null;
    
    int index = 0;
    
    JComboBox comboBox = null;
    
    for (int i = 0; i < container.getComponentCount(); ) {
        JComponent component = container.getComponent(i);
        String componentName = component.getName();
        
        //amoMakeMessage(component.getClass().getName() + " " + component.getName());
        
        if (component instanceof JComboBox) {
            if (componentName != null && componentName.equals(name)) {
                if (comboBox == null) {
                    comboBox = (JComboBox) component;
                }
                else {
                    container.remove(component);
                    continue;
                }
            }
            else if (componentName != null && componentName.startsWith("AmoMake_")) {
                index = i + 1;
            }
        }
        else if (component instanceof Box.Filler && index == 0) {
            index = i + 1;
        }
        ++i;
    }
    
    if (comboBox != null || ! create)
        return comboBox;
    
    comboBox = new JComboBox();
    
    comboBox.setName(name);
    
    container.add(comboBox, index);
    
    comboBox.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            jEdit.setProperty("macro.amo.make.value." + cname, comboBox.getSelectedItem());
            //amoMakeMessage(amoMakeArgs());
        }
    });
    
    return comboBox;
}

void amoMakeUpdateComponents() {
    amoMakeRemoveComponents();
    
    String app = ProjectViewer.getActiveProject(view).getNodePath();
    
    File jeditMakefile = new File(app + "/Makefile.jedit");
    
    if (jeditMakefile.exists()) {
        List args = new ArrayList();
        
        args.add("make");
        args.add("jedit");
        args.add("-f");
        args.add(jeditMakefile.getPath());
        
        ProcessBuilder pb = new ProcessBuilder(args);
        //pb.redirectErrorStream(true);
        Process proc = pb.start();
        
        InputStream is = proc.getInputStream();
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        
        String line;
        int exit = -1;
        
        while ((line = br.readLine()) != null) {
            int index = line.indexOf('=');
            
            if (index > 0) {
                JComboBox comboBox = amoMakeComboBox("AmoMake_" + line.substring(0, index), true);
                comboBox.addItem(line);
                comboBox.setMaximumSize(comboBox.getMinimumSize());
                comboBox.getParent().validate();
            }
        }
    }
    
    Container container = amoMakeContainer();
    
    for (int i = 0; i < container.getComponentCount(); ++i) {
        JComponent component = container.getComponent(i);
        String componentName = component.getName();
        
        if (component instanceof JComboBox && componentName != null && componentName.startsWith("AmoMake_")) {
            JComboBox comboBox = (JComboBox) component;
            String value = jEdit.getProperty("macro.amo.make.value." + componentName, null);
            if (value != null)
                comboBox.setSelectedItem(value);
        }
    }
}

if (jEdit.getPlugin("projectviewer.ProjectPlugin", true) != null) {
    EditBus.addToBus(
        new EBComponent() {
            void handleMessage(EBMessage message) {
                if (message instanceof ViewerUpdate) {
                    if (((ViewerUpdate) message).getType() == ViewerUpdate.PROJECT_LOADED) {
                        amoMakeMessage(message.toString());
                        amoMakeUpdateComponents();
                    }
                }
            }
        }
    );
}

